name: CD

on:
  push:
    branches: [ main, master ]
  release:
    types: [published]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push-images:
    name: Build and push Docker images (frontend/backend)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Compute image tags
        id: meta
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          FRONTEND_IMAGE="ghcr.io/${REPO_OWNER}/fichajespi-frontend"
          BACKEND_IMAGE="ghcr.io/${REPO_OWNER}/fichajespi-backend"
          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAG="${{ github.event.release.tag_name }}"
          else
            TAG="latest"
          fi
          echo "frontend_image=${FRONTEND_IMAGE}" >> $GITHUB_OUTPUT
          echo "backend_image=${BACKEND_IMAGE}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./angular_fichajesPi
          push: true
          build-args: |
            apiURL=http://localhost:8080
          tags: |
            ${{ steps.meta.outputs.frontend_image }}:${{ steps.meta.outputs.tag }}
      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./spring-boot_fichajesPi
          push: true
          tags: |
            ${{ steps.meta.outputs.backend_image }}:${{ steps.meta.outputs.tag }}

  desktop-release:
    name: Build desktop jar and upload
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
      - name: Build desktop
        run: mvn -B -ntp -f fichajesPi_desktop/pom.xml clean package -DskipTests
      - name: Upload desktop artifact
        uses: softprops/action-gh-release@v2
        with:
          files: |
            fichajesPi_desktop/target/*jar

