name: 'CD: Publish Docker images & GitHub Pages'

on:
  push:
    branches: [ main, master, develop ]
    tags: ['v*']
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push-images:
    name: Build and push Docker images (frontend/backend)
    runs-on: ubuntu-latest
    env:
      FE_API_URL: ${{ vars.FE_API_URL != '' && vars.FE_API_URL || 'http://localhost:8080' }}

    steps:
      - uses: actions/checkout@v4

      - name: Determine changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            fe:
              - 'apps/fichaje-fe/**'
            be:
              - 'apps/fichaje-be/**'

      - name: Set repo owner (lowercase)
        id: repo_owner
        run: |
          OWNER="${{ github.repository_owner }}"
          OWNER_LC="${OWNER,,}"
          echo "owner=${OWNER_LC}" >> $GITHUB_OUTPUT

      # (Opcional) multi-arch
      # - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata (frontend)
        id: meta_fe
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.repo_owner.outputs.owner }}/fichaje-frontend
          tags: |
            type=ref,event=branch
            type=sha
            type=semver,pattern={{version}},event=tag
            type=semver,pattern={{major}}.{{minor}},event=tag
            type=semver,pattern={{major}},event=tag
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}

      - name: Docker metadata (backend)
        id: meta_be
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.repo_owner.outputs.owner }}/fichaje-backend
          tags: |
            type=ref,event=branch
            type=sha
            type=semver,pattern={{version}},event=tag
            type=semver,pattern={{major}}.{{minor}},event=tag
            type=semver,pattern={{major}},event=tag
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}

      - name: Build and push frontend image
        if: startsWith(github.ref, 'refs/tags/v') || steps.changes.outputs.fe == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./apps/fichaje-fe
          file: ./apps/fichaje-fe/Dockerfile
          push: true
          build-args: |
            apiURL=${{ env.FE_API_URL }}
          tags: ${{ steps.meta_fe.outputs.tags }}
          labels: ${{ steps.meta_fe.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # platforms: linux/amd64,linux/arm64   # <- si habilitas QEMU

      - name: Build and push backend image
        if: startsWith(github.ref, 'refs/tags/v') || steps.changes.outputs.be == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./apps/fichaje-be
          file: ./apps/fichaje-be/Dockerfile
          push: true
          tags: ${{ steps.meta_be.outputs.tags }}
          labels: ${{ steps.meta_be.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # platforms: linux/amd64,linux/arm64

  deploy-github-pages:
    name: Deploy frontend to GitHub Pages
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: build-and-push-images

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        working-directory: apps/fichaje-fe
        run: npm ci --legacy-peer-deps

      - name: Build Angular app for GitHub Pages
        working-directory: apps/fichaje-fe
        env:
          # Usa la variable de entorno para el backend desplegado
          FE_API_URL: ${{ vars.FE_API_URL != '' && vars.FE_API_URL || 'https://demo.api.fichaje.org' }}
        run: |
          # Extrae el nombre del repo para base-href
          REPO_NAME="${{ github.event.repository.name }}"
          npm run build -- --configuration production --base-href /${REPO_NAME}/ --deploy-url /${REPO_NAME}/

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/fichaje-fe/dist/angular-fichajesPi

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
